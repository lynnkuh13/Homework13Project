{"ast":null,"code":"var _jsxFileName = \"/Users/lynnk/Documents/skillspire/sept2021MERN/webfundamentals/js/React/Homework13Project/reactapiproject/src/WeatherApp.js\",\n    _s = $RefreshSig$();\n\nimport './WeatherApp.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport WeatherMain from './WeatherMain';\nimport rainImage from './images/rain.jpg';\nimport cloudImage from './images/cloudy.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherApp() {\n  _s();\n\n  const apiKey = 'a26c42b0ac5962d5bbc6665ebc491ac9';\n  const base = 'https://api.openweathermap.org/data/2.5/';\n  const [weatherData, setWeatherData] = useState([{}]);\n  const [city, setCity] = useState(\"\");\n\n  const dateBuilder = d => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const getWeather = event => {\n    if (event.key === 'Enter') {\n      axios.get(`${base}weather?q=${city}&units=imperial&cnt=7&APPID=${apiKey}`).then(response => {\n        console.log(\"AXIOS RESPONSE: \", response.data);\n        setWeatherData(response.data);\n        console.log(weatherData);\n        setCity(\"\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  let rows = [];\n  let imageUrl;\n\n  if (typeof weatherData.weather != 'undefined') {\n    //   if (weatherData.weather[0].main === 'Clouds') {\n    //    let backgroundColor = 'red';\n    //    return (\n    //     <div className='container' style={{ backgroundColor: backgroundColor }}/>\n    //    )\n    //  }\n    if (weatherData.weather[0].main === 'Clouds') {\n      console.log(weatherData.weather[0].main);\n      const imageUrl = weatherData.weather[0].main === 'Clouds' ? cloudImage : rainImage;\n    }\n\n    rows = weatherData.weather.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(WeatherMain, {\n          description: el.description,\n          icon: el.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this); // return\n    });\n  }\n\n  console.log(weatherData.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      placeholder: \"Enter City\",\n      onChange: e => setCity(e.target.value),\n      value: city,\n      onKeyPress: getWeather,\n      style: {\n        backgroundImage: `url(${imageUrl})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), typeof weatherData.main === 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to weather app! Enter in a city to get the weather.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: dateBuilder(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [Math.round(weatherData.main.temp), \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }, this), rows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeatherApp, \"P2ZU9NxmMW6cYU4ngnQWuSuTk2U=\");\n\n_c = WeatherApp;\nexport default WeatherApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"sources":["/Users/lynnk/Documents/skillspire/sept2021MERN/webfundamentals/js/React/Homework13Project/reactapiproject/src/WeatherApp.js"],"names":["axios","React","useState","WeatherMain","rainImage","cloudImage","WeatherApp","apiKey","base","weatherData","setWeatherData","city","setCity","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","getWeather","event","key","get","then","response","console","log","data","catch","err","rows","imageUrl","weather","main","map","el","description","icon","name","e","target","value","backgroundImage","Date","Math","round","temp"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAMC,MAAM,GAAG,kCAAf;AACA,QAAMC,IAAI,GAAG,0CAAb;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EACZ,WADY,EACC,SADD,EACY,UADZ,EACwB,UADxB,CAAb;AAEA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEC,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACJ,GAXC;;AAcE,QAAME,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AAC5B3B,MAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEpB,IAAK,aAAYG,IAAK,+BAA8BJ,MAAO,EAAxE,EACIsB,IADJ,CACSC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,QAAQ,CAACG,IAAzC;AACAvB,QAAAA,cAAc,CAACoB,QAAQ,CAACG,IAAV,CAAd;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAZ;AACAG,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OANN,EAOMsB,KAPN,CAOYC,GAAG,IAAI;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,OATJ;AASM;AAAC,GAXR;;AAcI,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAJ;;AACA,MAAK,OAAO5B,WAAW,CAAC6B,OAAnB,IAA8B,WAAnC,EAAiD;AAClD;AACC;AACA;AACC;AACD;AACA;AACE,QAAI7B,WAAW,CAAC6B,OAAZ,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,QAApC,EAA8C;AAC5CR,MAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAW,CAAC6B,OAAZ,CAAoB,CAApB,EAAuBC,IAAnC;AACA,YAAMF,QAAQ,GAAG5B,WAAW,CAAC6B,OAAZ,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,QAAhC,GAA2ClC,UAA3C,GAAwDD,SAAzE;AACD;;AAEDgC,IAAAA,IAAI,GAAG3B,WAAW,CAAC6B,OAAZ,CAAoBE,GAApB,CAAwBC,EAAE,IAAI;AACjC,0BACA;AAAA,gCACK,QAAE,WAAF;AAAc,UAAA,WAAW,EAAEA,EAAE,CAACC,WAA9B;AAA2C,UAAA,IAAI,EAAED,EAAE,CAACE;AAApD;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAA,qBAAKF,EAAE,CAACC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADiC,CAM/B;AACP,KAPQ,CAAP;AAQD;;AAGPX,EAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAW,CAACmC,IAAxB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,WAAW,EAAC,YAAjD;AACA,MAAA,QAAQ,EAAEC,CAAC,IAAIjC,OAAO,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CADtB;AACwC,MAAA,KAAK,EAAEpC,IAD/C;AACqD,MAAA,UAAU,EAAEc,UADjE;AAC6E,MAAA,KAAK,EAAE;AAACuB,QAAAA,eAAe,EAAG,OAAMX,QAAS;AAAlC;AADpF;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,OAAO5B,WAAW,CAAC8B,IAAnB,KAA4B,WAA5B,gBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2B9B,WAAW,CAACmC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuB/B,WAAW,CAAC,IAAIoC,IAAJ,EAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBAAuBC,IAAI,CAACC,KAAL,CAAW1C,WAAW,CAAC8B,IAAZ,CAAiBa,IAA5B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAI3C,WAAW,CAAC6B,OAAZ,CAAoB,CAApB,EAAuBC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJF,EAMCH,IAND;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAnFQ9B,U;;KAAAA,U;AAqFT,eAAeA,UAAf","sourcesContent":["import './WeatherApp.css';\nimport axios from 'axios';\nimport React, {useState} from 'react';\nimport WeatherMain from './WeatherMain';\nimport rainImage from './images/rain.jpg';\nimport cloudImage from './images/cloudy.jpg';\n\nfunction WeatherApp() {\n\n  const apiKey = 'a26c42b0ac5962d5bbc6665ebc491ac9';\n  const base = 'https://api.openweathermap.org/data/2.5/';\n  const [weatherData, setWeatherData] = useState([{}]);\n  const [city, setCity] = useState(\"\");\n\n  const dateBuilder = (d) => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n     'September', 'October', 'November', 'December'];\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n     return `${day} ${date} ${month} ${year}`\n}\n  \n        \n    const getWeather = (event) => {\n      if( event.key === 'Enter' ){\n     axios.get(`${base}weather?q=${city}&units=imperial&cnt=7&APPID=${apiKey}`)\n        .then(response => {\n            console.log(\"AXIOS RESPONSE: \", response.data);\n            setWeatherData(response.data)\n            console.log(weatherData);\n            setCity(\"\");\n          })\n          .catch(err => {\n            console.log(err);\n        })}};\n\n\n        let rows = [];\n        let imageUrl;\n        if ( typeof weatherData.weather != 'undefined' ) {\n       //   if (weatherData.weather[0].main === 'Clouds') {\n        //    let backgroundColor = 'red';\n        //    return (\n         //     <div className='container' style={{ backgroundColor: backgroundColor }}/>\n        //    )\n        //  }\n          if (weatherData.weather[0].main === 'Clouds') { \n            console.log(weatherData.weather[0].main);\n            const imageUrl = weatherData.weather[0].main === 'Clouds' ? cloudImage : rainImage;\n          }                    \n          \n          rows = weatherData.weather.map(el => {\n              return (\n              <ul>\n                   < WeatherMain description={el.description} icon={el.icon} />\n                   <li>{el.description} </li>\n               </ul>\n              ) // return\n        }) \n        }  \n     \n  \n  console.log(weatherData.name);\n  return (\n    <div className=\"container\">\n      <input type=\"text\" className=\"input\" placeholder=\"Enter City\" \n      onChange={e => setCity(e.target.value)} value={city} onKeyPress={getWeather} style={{backgroundImage: `url(${imageUrl})` }}/>\n\n     {typeof weatherData.main === 'undefined' ? (\n       <div className=\"welcome\">\n         <p>Welcome to weather app! Enter in a city to get the weather.</p>\n       </div>\n     ) : (\n       <div>\n         <div className='location'>{weatherData.name}</div>\n         <div className='date'>{dateBuilder(new Date())}</div>\n         <div className='temp'>{Math.round(weatherData.main.temp)}°F</div>\n         <p>{weatherData.weather[0].main}</p>\n\n       {rows} \n        </div>\n     )}  \n\n    </div>\n  );\n}\n\nexport default WeatherApp;\n"]},"metadata":{},"sourceType":"module"}